import Head from 'next/head'
import {GetServerSideProps} from "next";
import {isAppSessionQuery} from "@storyblok/app-extension-auth";
import {appSessionCookies} from "@/auth";
import {useAutoHeight} from "@/hooks";
import {useContext} from "@/hooks/getContext";
import {isAdmin} from "@/utils";

export default function Home() {
 useAutoHeight();
 //draft
 useContext();

  return (
    <>
      <Head>
        <title>Storyblok Next Tool Starter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
     <span>TBD</span>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { query } = context;

  if (!isAppSessionQuery(query)) {
    return {
      redirect: {
        permanent: false,
        destination: process.env.APP_URL + '/api/connect/storyblok',
      },
    };
  }

  const sessionStore = appSessionCookies(context);
  const appSession = await sessionStore.get(query);

  if (!appSession) {
    return {
      redirect: {
        permanent: false,
        destination: process.env.APP_URL + '/api/connect/storyblok',
      },
    };
  }
  const { accessToken, spaceId, userId } = appSession;
  return { props: { accessToken, spaceId, userId, isAdmin: isAdmin(appSession) } };
};
